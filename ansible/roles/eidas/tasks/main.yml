---

- name: install libhttp2 (needed by uri module)
  pip: name=httplib2 state=present

- name: create application group
  group: name=eidas state=present

- name: create appplication user
  user:
    name: "{{ eidas_user }}"
    group: "{{ eidas_group }}"
    home: "{{ eidas_dir }}"
    shell: /sbin/nologin

- name: create logging directory
  file:
    path: /var/log/eidas
    state: directory
    owner: "{{ eidas_user }}"
    group: "{{ eidas_group }}"
    mode: 0755

- name: copy logging config
  template:
    src: logback.xml.j2
    dest: "{{ eidas_dir }}/logback.xml"
    owner: "{{ eidas_user }}"
    group: "{{ eidas_group }}"
    mode: 0640
  tags: deploy
  notify: restart eidas

- name: copy application yml
  template:
    src: application.yml.j2
    dest: "{{ eidas_dir }}/application.yml"
    owner: "{{ eidas_user }}"
    group: "{{ eidas_group }}"
    mode: 0400
  tags: deploy
  notify: restart eidas

- name: copy metadata
  template:
    src: eidas.proxy.sp.metadata.xml.j2
    dest: "{{ eidas_dir }}/eidas.proxy.sp.metadata.xml"
    owner: "{{ eidas_user }}"
    group: "{{ eidas_group }}"
    mode: 0400
  tags: deploy
  notify: restart eidas

- name: copy application config
  template:
    src: eidas.conf.j2
    dest: "{{ eidas_dir }}/eidas.conf"
    owner: root
    group: root
    mode: 0400
  tags: deploy
  notify: restart eidas

- name: download eidas.jar
  maven_artifact:
    group_id: "{{ eidas_group_id }}"
    artifact_id: "{{ eidas_artifact }}"
    version: "{{ eidas_version }}"
    repository_url: "{{ maven_snapshot_repo if 'SNAPSHOT' in eidas_version else maven_repo }}"
    dest: "{{ eidas_dir }}"
  tags: deploy
  register: maven_result

- name: set ownership of application artifact
  file: path={{ maven_result.dest }} owner={{ eidas_user }} group={{ eidas_group }} mode=0500
  tags: deploy

- name: change symlink to current version
  file:
    src: "{{ maven_result.dest }}"
    dest: "{{ eidas_dir }}/eidas.jar"
    state: link
    owner: "{{ eidas_user }}"
    group: "{{ eidas_group }}"
  tags: deploy
  when: maven_result.changed

- name: link application config
  file:
    src: "{{ eidas_dir }}/eidas.conf"
    dest: "{{ eidas_dir }}/eidas-{{ maven_result.version }}.conf"
    state: link
  when: maven_result.changed
  tags: deploy

- name: create systemd service
  template:
    src: eidas.service.j2
    dest: /etc/systemd/system/eidas.service
    owner: root
    group: root
    mode: 0400
  tags: deploy

- name: restart eidas
  service: name=eidas state=restarted
  tags: deploy
  when: maven_result.changed

- name: wait for restart
  uri: url=http://localhost:{{ eidas_port }}/health
  tags: deploy
  register: health_result
  until: health_result.status is defined and health_result.status == 200 and health_result.json.status == "UP"
  retries: 25
  delay: 5
  when: maven_result.changed

#- name: cleanup old artifacts
#  command: find . ! -name {{ artifact }} -name '*.jar -type f -exec rm {} \; chdir={{ eidas_dir }}
#  tags: deploy
#  when: maven_result.changed

- name: copy virtual host config
  template: src=httpd/eidas.conf.j2 dest=/etc/httpd/conf.d/eidas.conf
  tags: deploy
  notify: reload httpd

- name: ensure the service is started
  service: name=eidas enabled=yes state=started
